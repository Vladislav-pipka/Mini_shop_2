<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="316d0aa5-e240-476d-8280-415f1a71691d" name="Changes" comment="Зарегали в INSTALLED_APPS 'имя_ветки'&#10;Создал полки в models-- пример:&#10;class Product(models.Model):&#10;    name=models.CharField(max_length=50)&#10;    description=models.TextField(null=True, blank=True)&#10;    price=models.DecimalField(max_digits=10, decimal_places=2)&#10;    category=models.ForeignKey(Category,on_delete=models.CASCADE)&#10;    counts=models.PositiveIntegerField()&#10;    image=models.ImageField(upload_to='products/')&#10;    def __str__(self):&#10;        return self.name&#10;        ДЛЯ КЛАССА IMAGE НАДО ДОБАВИТЬ:&#10;        MEDIA_URL = '/media/'&#10;        MEDIA_ROOT = os.path.join(BASE_DIR, 'media')&#10;        if settings.DEBUG:    &#10;          urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)---&gt; в urls&#10;После мигрируем: (python manage.py makemigrations/python manage.py migrate)" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Vladislav-pipka&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/Vladislav-pipka/Mini_shop_2.git&quot;,
    &quot;accountId&quot;: &quot;ac1143b0-dff9-4305-82e9-ee79b61968a3&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2qObPa97LRNeetr0E6Z8e7UfU4T" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "master",
    "last_opened_file_path": "C:/Users/Shlangistan/PycharmProjects/Mini_shop_2"
  }
}]]></component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-98f27166c754-ba05f1cad1b1-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-242.21829.153" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="316d0aa5-e240-476d-8280-415f1a71691d" name="Changes" comment="" />
      <created>1734536545957</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1734536545957</updated>
    </task>
    <task id="LOCAL-00001" summary="Start project">
      <option name="closed" value="true" />
      <created>1734536722163</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1734536722163</updated>
    </task>
    <task id="LOCAL-00002" summary="Start project Mini_shop_2 django-admin startproject Mini_shop_2 .">
      <option name="closed" value="true" />
      <created>1734537057372</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1734537057372</updated>
    </task>
    <task id="LOCAL-00003" summary="Создали свою ветку python manage.py startapp имя_ветки">
      <option name="closed" value="true" />
      <created>1734537352027</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1734537352027</updated>
    </task>
    <task id="LOCAL-00004" summary="Зарегали в INSTALLED_APPS 'имя_ветки'&#10;Создал полки в models-- пример:&#10;class Product(models.Model):&#10;    name=models.CharField(max_length=50)&#10;    description=models.TextField(null=True, blank=True)&#10;    price=models.DecimalField(max_digits=10, decimal_places=2)&#10;    category=models.ForeignKey(Category,on_delete=models.CASCADE)&#10;    counts=models.PositiveIntegerField()&#10;    image=models.ImageField(upload_to='products/')&#10;    def __str__(self):&#10;        return self.name&#10;        ДЛЯ КЛАССА IMAGE НАДО ДОБАВИТЬ:&#10;        MEDIA_URL = '/media/'&#10;        MEDIA_ROOT = os.path.join(BASE_DIR, 'media')&#10;        if settings.DEBUG:    &#10;          urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)---&gt; в urls&#10;После мигрируем: (python manage.py makemigrations/python manage.py migrate)">
      <option name="closed" value="true" />
      <created>1735140763124</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1735140763124</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Start project" />
    <MESSAGE value="Start project Mini_shop_2 django-admin startproject Mini_shop_2 ." />
    <MESSAGE value="Создали свою ветку python manage.py startapp имя_ветки" />
    <MESSAGE value="Зарегали в INSTALLED_APPS 'имя_ветки'&#10;Создал полки в models-- пример:&#10;class Product(models.Model):&#10;    name=models.CharField(max_length=50)&#10;    description=models.TextField(null=True, blank=True)&#10;    price=models.DecimalField(max_digits=10, decimal_places=2)&#10;    category=models.ForeignKey(Category,on_delete=models.CASCADE)&#10;    counts=models.PositiveIntegerField()&#10;    image=models.ImageField(upload_to='products/')&#10;    def __str__(self):&#10;        return self.name&#10;        ДЛЯ КЛАССА IMAGE НАДО ДОБАВИТЬ:&#10;        MEDIA_URL = '/media/'&#10;        MEDIA_ROOT = os.path.join(BASE_DIR, 'media')&#10;        if settings.DEBUG:    &#10;          urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)---&gt; в urls&#10;После мигрируем: (python manage.py makemigrations/python manage.py migrate)" />
    <option name="LAST_COMMIT_MESSAGE" value="Зарегали в INSTALLED_APPS 'имя_ветки'&#10;Создал полки в models-- пример:&#10;class Product(models.Model):&#10;    name=models.CharField(max_length=50)&#10;    description=models.TextField(null=True, blank=True)&#10;    price=models.DecimalField(max_digits=10, decimal_places=2)&#10;    category=models.ForeignKey(Category,on_delete=models.CASCADE)&#10;    counts=models.PositiveIntegerField()&#10;    image=models.ImageField(upload_to='products/')&#10;    def __str__(self):&#10;        return self.name&#10;        ДЛЯ КЛАССА IMAGE НАДО ДОБАВИТЬ:&#10;        MEDIA_URL = '/media/'&#10;        MEDIA_ROOT = os.path.join(BASE_DIR, 'media')&#10;        if settings.DEBUG:    &#10;          urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)---&gt; в urls&#10;После мигрируем: (python manage.py makemigrations/python manage.py migrate)" />
  </component>
</project>